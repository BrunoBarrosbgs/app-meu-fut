'use client';

import { Star } from "lucide-react";
import { cn } from "@/lib/utils";
import { useState } from "react";

interface StarRatingProps {
  count?: number;
  value: number;
  onChange?: (rating: number) => void;
  size?: number;
  isReadOnly?: boolean;
}

export function StarRating({ count = 5, value, onChange, size = 20, isReadOnly = false }: StarRatingProps) {
  const [hoverValue, setHoverValue] = useState<number | undefined>(undefined);

  const stars = Array.from({ length: count }, (_, i) => i + 1);

  const handleClick = (rating: number) => {
    if (onChange && !isReadOnly) {
      onChange(rating);
    }
  };
  
  const handleMouseMove = (rating: number) => {
    if (!isReadOnly) setHoverValue(rating);
  };
  
  const handleMouseLeave = () => {
    if (!isReadOnly) setHoverValue(undefined);
  };

  return (
    <div className="flex items-center gap-0.5" onMouseLeave={handleMouseLeave}>
      {stars.map((starValue) => (
        <Star
          key={starValue}
          size={size}
          className={cn(
            "transition-colors",
            (hoverValue || value) >= starValue ? "text-yellow-400 fill-yellow-400" : "text-muted-foreground/50",
            !isReadOnly && "cursor-pointer"
          )}
          onClick={() => handleClick(starValue)}
          onMouseMove={() => handleMouseMove(starValue)}
        />
      ))}
    </div>
  );
}
